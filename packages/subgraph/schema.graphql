type BuyOrder @entity{
  id: ID!
#  option: Option!
#  user: User!
  userOption: UserOption!
  size: BigDecimal!
  nonce: Int!
  price: BigDecimal!
  pricePerContract: BigDecimal!
  expiredNonce: Boolean!
  funded: Boolean!
  offerExpire: Int!
  fee: BigDecimal!
  block: Int!
  timestamp: Int!
  matches: [Match!]! @derivedFrom(field: "buyOrder")
  cancelDate: Int!
}

type SellOrder @entity{
  id: ID!
#  option: Option!
#  user: User!
  userOption: UserOption!
  size: BigDecimal!
  nonce: Int!
  price: BigDecimal!
  pricePerContract: BigDecimal!
  expiredNonce: Boolean!
  funded: Boolean!
  offerExpire: Int!
  fee: BigDecimal!
  block: Int!
  timestamp: Int!
  matches: [Match!]! @derivedFrom(field: "sellOrder")
  cancelDate: Int!
}

type OptionPosition @entity {
  id: ID!
#  user: User!
#  option: Option!
  userOption: UserOption!
  balance: BigDecimal!
  block: Int!
  timestamp: Int!
}

type UserMatch @entity {
  id: ID!
  user: User!
  match: Match!
}

type Match @entity {
  id: ID!
  buyOrder: BuyOrder!
  sellOrder: SellOrder!
  totalFee: BigDecimal!
  size: BigDecimal!
  finalPrice: BigDecimal!
  finalPricePerContract: BigDecimal!
  block: Int!
  timestamp: Int!
  userMatches: [UserMatch!]! @derivedFrom(field: "match")
}

type Option @entity {
  id: ID!
  name: String
  baseAsset: Token!
  quoteAsset: Token!
  expiry: Int!
  strike: BigDecimal!
  optionType: String!
  lastPrice: BigDecimal
  openInterest: BigDecimal!
  userOptions: [UserOption!]! @derivedFrom(field: "option")
#  buyOrders: [BuyOrder!]! @derivedFrom(field: "option")
#  sellOrders: [SellOrder!]! @derivedFrom(field: "option")
}

type User @entity {
  id: ID!
  tokenBalances: [TokenBalance!]! @derivedFrom(field: "user")
  userMatches: [UserMatch!]! @derivedFrom(field: "user")
  userOptions: [UserOption!]! @derivedFrom(field: "user")
#  buyOrders: [BuyOrder!]! @derivedFrom(field: "user")
#  sellOrders: [SellOrder!]! @derivedFrom(field: "user")
}

type UserOption @entity {
  id: ID!
  user: User!
  option: Option!
  optionPositions: [OptionPosition!]! @derivedFrom(field: "userOption")
  buyOrders: [BuyOrder!]! @derivedFrom(field: "userOption")
  sellOrders: [SellOrder!]! @derivedFrom(field: "userOption")
}

type Token @entity {
  id: ID!
  symbol: String!
  name: String!
  decimals: Int!
}

type TokenBalance @entity {
  id: ID!
  user: User!
  token: Token!
  unlockedBalance: BigDecimal!
  lockedBalance: BigDecimal!
#  snapshots: [TokenBalanceSnapshot!]!
  block: Int!
  timestamp: Int!
}

type Gravatar @entity {
  id: ID!
  owner: Bytes!
  displayName: String!
  imageUrl: String!
}
